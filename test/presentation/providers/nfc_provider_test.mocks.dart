// Mocks generated by Mockito 5.4.6 from annotations
// in nfc_guard/test/presentation/providers/nfc_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nfc_guard/data/datasources/nfc_logging_service.dart' as _i5;
import 'package:nfc_guard/data/datasources/secure_storage_service.dart' as _i2;
import 'package:nfc_guard/data/models/user_model.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SecureStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageService extends _i1.Mock
    implements _i2.SecureStorageService {
  MockSecureStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveUser(_i4.UserModel? user) =>
      (super.noSuchMethod(
            Invocation.method(#saveUser, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i4.UserModel?> getUser() =>
      (super.noSuchMethod(
            Invocation.method(#getUser, []),
            returnValue: _i3.Future<_i4.UserModel?>.value(),
          )
          as _i3.Future<_i4.UserModel?>);

  @override
  _i3.Future<void> saveUsedCodes(List<String>? codes) =>
      (super.noSuchMethod(
            Invocation.method(#saveUsedCodes, [codes]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<String>> getUsedCodes() =>
      (super.noSuchMethod(
            Invocation.method(#getUsedCodes, []),
            returnValue: _i3.Future<List<String>>.value(<String>[]),
          )
          as _i3.Future<List<String>>);

  @override
  _i3.Future<void> addUsedCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#addUsedCode, [code]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> isCodeUsed(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#isCodeUsed, [code]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> deleteUser() =>
      (super.noSuchMethod(
            Invocation.method(#deleteUser, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> clearStorage() =>
      (super.noSuchMethod(
            Invocation.method(#clearStorage, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [NfcLoggingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNfcLoggingService extends _i1.Mock implements _i5.NfcLoggingService {
  MockNfcLoggingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> logNfcOperation({
    required _i5.NfcOperationType? operationType,
    required String? codeUsed,
    int? datasetNumber,
    bool? success = false,
    String? errorMessage,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#logNfcOperation, [], {
              #operationType: operationType,
              #codeUsed: codeUsed,
              #datasetNumber: datasetNumber,
              #success: success,
              #errorMessage: errorMessage,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getNfcOperationHistory({
    int? limit = 50,
    DateTime? since,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getNfcOperationHistory, [], {
              #limit: limit,
              #since: since,
            }),
            returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<Map<String, int>> getOperationStatistics() =>
      (super.noSuchMethod(
            Invocation.method(#getOperationStatistics, []),
            returnValue: _i3.Future<Map<String, int>>.value(<String, int>{}),
          )
          as _i3.Future<Map<String, int>>);
}
