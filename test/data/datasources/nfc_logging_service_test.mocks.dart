// Mocks generated by Mockito 5.4.6 from annotations
// in nfc_guard/test/data/datasources/nfc_logging_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:nfc_guard/data/datasources/supabase_service.dart' as _i3;
import 'package:supabase_flutter/supabase_flutter.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupabaseClient_0 extends _i1.SmartFake
    implements _i2.SupabaseClient {
  _FakeSupabaseClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthResponse_1 extends _i1.SmartFake implements _i2.AuthResponse {
  _FakeAuthResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQueryBuilder_2 extends _i1.SmartFake
    implements _i2.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseStreamBuilder_3 extends _i1.SmartFake
    implements _i2.SupabaseStreamBuilder {
  _FakeSupabaseStreamBuilder_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SupabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseService extends _i1.Mock implements _i3.SupabaseService {
  MockSupabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SupabaseClient get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeSupabaseClient_0(
              this,
              Invocation.getter(#client),
            ),
          )
          as _i2.SupabaseClient);

  @override
  _i4.Stream<_i2.AuthState> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i4.Stream<_i2.AuthState>.empty(),
          )
          as _i4.Stream<_i2.AuthState>);

  @override
  _i4.Future<_i2.AuthResponse> signUp({
    required String? email,
    required String? password,
    Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #email: email,
              #password: password,
              #data: data,
            }),
            returnValue: _i4.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_1(
                this,
                Invocation.method(#signUp, [], {
                  #email: email,
                  #password: password,
                  #data: data,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.AuthResponse>);

  @override
  _i4.Future<_i2.AuthResponse> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i4.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_1(
                this,
                Invocation.method(#signIn, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.AuthResponse>);

  @override
  _i4.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i2.SupabaseQueryBuilder from(String? table) =>
      (super.noSuchMethod(
            Invocation.method(#from, [table]),
            returnValue: _FakeSupabaseQueryBuilder_2(
              this,
              Invocation.method(#from, [table]),
            ),
          )
          as _i2.SupabaseQueryBuilder);

  @override
  _i2.SupabaseStreamBuilder stream(String? table) =>
      (super.noSuchMethod(
            Invocation.method(#stream, [table]),
            returnValue: _FakeSupabaseStreamBuilder_3(
              this,
              Invocation.method(#stream, [table]),
            ),
          )
          as _i2.SupabaseStreamBuilder);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i5.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  Map<String, dynamic> get appMetadata =>
      (super.noSuchMethod(
            Invocation.getter(#appMetadata),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  String get aud =>
      (super.noSuchMethod(
            Invocation.getter(#aud),
            returnValue: _i5.dummyValue<String>(this, Invocation.getter(#aud)),
          )
          as String);

  @override
  String get createdAt =>
      (super.noSuchMethod(
            Invocation.getter(#createdAt),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#createdAt),
            ),
          )
          as String);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}
